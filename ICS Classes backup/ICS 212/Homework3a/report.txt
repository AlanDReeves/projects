According to the addresses printed by the actual code, variable addresses can be allocated in alternating increasing and decreasing order. Additionally, either some data types were much larger than I thought or there can be spaces between some variables in the stack. In my case, argc had an address number 12 bytes higher than argv. I am unsure if this means that the address printed for argv was the lowest address allocated to that variable or if argc was a 12 byte long integer.
After argv, the variable addresses started again at a much higher number and decreased from there.
I noticed also that the highest address in the array was the final value, while the other variables had been in decreasing order. This may indicate that the final place in an array is allocated first.
Finally, the variables allocated for the dummy function were separated in the stack from the variables for main. This makes me think that the CPU was doing something else between reaching the function call in main and completing dummy. 